@{
    ViewBag.Title = "ParameterManagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using AlgorithmParameterManager.DTO
@model  AlgorithmParameterManager.UI.Web.Models.ParameterManagementListViewModel

<h2>ParameterManagement</h2>

<div class="row">
    <div class='col-sm-10'></div>
    <div class='col-sm-2'>
        @*<a id="btn-create" class="btn btn-info" href="javascript:;">Create</a>*@
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myModal">Create</button>
    </div>
</div>

@if (!Model.Success)
{
    <span>Ooopss.. </span>
    <br />
    <ul>
        @foreach (var message in Model.Messages)
        {
            <li>@message</li>
        }
    </ul>
        
}
else if (Model.Success && !Model.ParameterManagements.Any())
{
    <ul>
        @foreach (var message in Model.Messages)
        {
            <li>@message</li>
        }
    </ul>
}
else
{

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Parameter Name (Description)</th>
                <th>Value</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ParameterManagements)
            {
                <tr>
                    <td>
                        <div class='col-sm-9'>
                            <input type="text"  data-id="@item.ID" name="txtName"  value="@item.Name" class = "form-control"/><span>(@item.Description)</span>
                        </div>
                    </td>
                    <td>
                        <div class='col-sm-9'>
                            <input  data-id="@item.ID" type="hidden" id="data-type" value="@item.Type"/>
                            @if (item.Type == Enums.DataType.Integer || item.Type == Enums.DataType.Decimal)
                            {
                                <input  data-id="@item.ID" type="text" name="elementValue"  value="@item.Value" class = "form-control"/>
                            }
                            else if (item.Type == Enums.DataType.DateTime)
                            {
                                <input  data-id="@item.ID" type="text" name="elementValue"  value="@item.Value" class = "form-control dtpckr"/>
                            }
                            else
                            {
                                <input  data-id="@item.ID" type="checkbox" name="elementValue" class = "form-control" @string.Format("{0}", item.Value.ToLower().Equals("true") ? "checked" : "") />
                            }
                        </div>
                    </td>
                    <td>
                        <div class='col-sm-9'>
                            <a data-id="@item.ID" class="btn btn-success btn-save" href="javascript:;">Save</a>
                            <a data-id="@item.ID" class="btn btn-danger btn-delete" href="javascript:;">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
   

}

    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <fieldset>

                            <!-- Form Name -->
                            <legend>Algorithm Parameter</legend>

                            <!-- Text input-->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="txtName">Name</label>
                                <div class="col-md-4">
                                    <input id="txtName" name="txtName" type="text" placeholder="" class="form-control input-md">
                                </div>
                            </div>

                            <!-- Textarea -->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="txtDescription">Description</label>
                                <div class="col-md-4">
                                    <textarea class="form-control" id="txtDescription" name="txtDescription"></textarea>
                                </div>
                            </div>

                            <!-- Multiple Radios (inline) -->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="radios">Types</label>
                                <div class="col-md-8">
                                    <label class="radio-inline" for="valInteger">
                                        <input type="radio" name="radios" id="valInteger" value="1">
                                        Integer
                                    </label>
                                    <label class="radio-inline" for="valDecimal">
                                        <input type="radio" name="radios" id="valDecimal" value="2">
                                        Decimal
                                    </label>
                                    <label class="radio-inline" for="valBool">
                                        <input type="radio" name="radios" id="valBool" value="3">
                                        Bool
                                    </label>
                                    <label class="radio-inline" for="valDateTime">
                                        <input type="radio" name="radios" id="valDateTime" value="4">
                                        DateTime
                                    </label>
                                </div>
                            </div>

                            <!-- Text input-->
                            <div class="form-group">
                                <label class="col-md-4 control-label" for="textinput"></label>
                                <div class="col-md-4">
                                    <input id="txtValue" name="txtValue" type="text" placeholder="" class="form-control input-md" />
                                    <input id="txtDateTime" name="txtDateTime" type="text" placeholder="" class="form-control dtpckr" />
                                    <input id="chkValue" type="checkbox" name="chkValue" class = "form-control" />
                                </div>
                            </div>

                        </fieldset>
                    </form>

                </div>
                <div class="modal-footer">
                    <a id="btn-save-parameter" class="btn btn-success">Save</a>
                    <a class="btn btn-default" data-dismiss="modal">Close</a>
                </div>
            </div>
        </div>
    </div>

@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
            
            $('.dtpckr').datetimepicker();

            $('#txtValue').hide();
            $('#chkValue').hide();
            $('#txtDateTime').hide();
            
            
            $("input[name='radios']").change(function () {
                
                if (this.checked) {

                    var elementValue = $(this).attr('value');


                    if (elementValue == 1 || elementValue == 2) {
                        
                        $('#txtValue').show();
                        $('#chkValue').hide();
                        $('#txtDateTime').hide();
                        
                    } else if (elementValue == 3) {
                        $('#txtValue').hide();
                        $('#txtDateTime').hide();
                        $('#chkValue').show();
                    } else {
                        $('#txtValue').hide();
                        $('#txtDateTime').show();
                        $('#chkValue').hide();
                    }

                }
            });
            
            $('#btn-save-parameter').on('click', function (e) {
                
                var itemName = $("#txtName").val();

                var itemDescription = $("#txtDescription").val();

                var itemType = $("input[name='radios']:checked").attr('value');

                var itemValue;
                
                if (itemType == 1 || itemType == 2) {

                    itemValue = $('#txtValue').val();

                } else if (itemType == 3) {

                    itemValue = $("#chkValue").is(':checked');

                } else {
                    itemValue = $('#txtDateTime').val();
                }

                var itemAlgorithmType = '@ViewContext.RouteData.Values["type"]';

                var algorithmParameter = {};

                algorithmParameter.Name = itemName;
                algorithmParameter.Description = itemDescription;
                algorithmParameter.Type = itemType;
                algorithmParameter.Value = itemValue;
                algorithmParameter.AlgorithmType = itemAlgorithmType;
                
                $.ajax({
                    url: '/AlgorithmParameterManager/Create',
                    type: 'post',
                    dataType: 'json',
                    data: algorithmParameter,
                    success: function (data) {
                        if (data.Success) {
                            location.reload();
                        } else {

                            var messages = '';

                            for (var i = 0; i < data.Messages.length; i++) {
                                messages += data.Messages[i] + "\n";
                            }

                            alert(messages);
                        }
                    }
                });
                
            });


            $('.btn-delete').on('click', function (e) {

                var itemID = $(e.target).attr('data-id');

                var isConfirmed = confirm("Do you really want to delete record?");
                if (isConfirmed == true) {
                    $.ajax({
                        url: '/AlgorithmParameterManager/Delete',
                        type: 'post',
                        dataType: 'json',
                        data: { id: itemID },
                        success: function (data) {

                            if (data.Success) {
                                location.reload();
                            } else {
                                alert(data.Messages[0]);
                            }

                        }
                    });
                }
            });

            $('.btn-save').on('click', function (e) {

                var itemID = $(e.target).attr('data-id');

                var itemName = $("input[name='txtName'][data-id='" + itemID + "']").val();

                var itemType = $("input[id='data-type'][data-id='" + itemID + "']").val();

                var itemValue = itemType == 'Bool' ? $("input[name='elementValue'][data-id='" + itemID + "']").is(':checked') : $("input[name='elementValue'][data-id='" + itemID + "']").val();

                var itemAlgorithmType = '@ViewContext.RouteData.Values["type"]';

                var algorithmParameter = {};
                algorithmParameter.ID = itemID;
                algorithmParameter.Name = itemName;
                algorithmParameter.Type = itemType;
                algorithmParameter.Value = itemValue;
                algorithmParameter.AlgorithmType = itemAlgorithmType;

                $.ajax({
                    url: '/AlgorithmParameterManager/Save',
                    type: 'post',
                    dataType: 'json',
                    data: algorithmParameter,
                    success: function (data) {
                        if (data.Success == false) {
                            
                            var messages = '';

                            for (var i = 0; i < data.Messages.length; i++) {
                                messages += data.Messages[i] + "\n";
                            }

                            alert(messages);
                        }
                    }
                });


            });

        });

    </script>
}